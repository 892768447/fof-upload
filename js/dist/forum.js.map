{"version":3,"sources":["webpack://@fof/upload/webpack/bootstrap","webpack://@fof/upload/external \"flarum.core.compat['app']\"","webpack://@fof/upload/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/upload/external \"flarum.core.compat['components/Button']\"","webpack://@fof/upload/external \"flarum.core.compat['Model']\"","webpack://@fof/upload/external \"flarum.core.compat['extend']\"","webpack://@fof/upload/external \"flarum.core.compat['Component']\"","webpack://@fof/upload/external \"flarum.core.compat['components/UserPage']\"","webpack://@fof/upload/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@fof/upload/external \"flarum.core.compat['components/TextEditor']\"","webpack://@fof/upload/external \"flarum.core.compat['components/LinkButton']\"","webpack://@fof/upload/external \"flarum.core.compat['utils/mixin']\"","webpack://@fof/upload/external \"flarum.core.compat['components/Post']\"","webpack://@fof/upload/external \"flarum.core.compat['utils/classList']\"","webpack://@fof/upload/external \"flarum.core.compat['components/Modal']\"","webpack://@fof/upload/./src/common/models/File.js","webpack://@fof/upload/./src/common/fileToBBcode.js","webpack://@fof/upload/./src/forum/states/FileListState.js","webpack://@fof/upload/./src/forum/components/UploadButton.js","webpack://@fof/upload/./src/forum/components/DragAndDrop.js","webpack://@fof/upload/./src/forum/components/PasteClipboard.js","webpack://@fof/upload/./src/forum/handler/Uploader.js","webpack://@fof/upload/./src/common/mimeToIcon.js","webpack://@fof/upload/./src/forum/components/UserFileList.js","webpack://@fof/upload/./src/forum/components/FileManagerModal.js","webpack://@fof/upload/./src/forum/components/FileManagerButton.js","webpack://@fof/upload/./src/forum/components/UploadsUserPage.js","webpack://@fof/upload/./src/forum/components/index.js","webpack://@fof/upload/./src/forum/index.js","webpack://@fof/upload/./src/forum/addUploadButton.js","webpack://@fof/upload/./src/forum/downloadButtonInteraction.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","File","apiEndpoint","this","exists","data","id","bbcode","file","tag","uuid","humanSize","baseName","url","fileToBBcode","mixin","Model","attribute","path","type","size","createdAt","FileListState","user","files","moreResults","loading","setUser","loadResults","offset","app","store","find","filter","page","then","parseResults","loadMore","length","results","push","payload","links","next","redraw","addToList","Array","isArray","unshift","hasFiles","isLoading","hasMoreResults","empty","UploadButton","oninit","vnode","attrs","uploader","on","$","reset","isMediaUploadButton","oncreate","tooltip","view","buttonText","uploading","translator","trans","Button","component","className","classList","icon","onclick","uploadButtonClicked","title","disabled","LoadingIndicator","multiple","onchange","process","e","prop","upload","click","Component","DragAndDrop","composerElement","handlers","supportsFileDragging","addEventListener","out","dropping","div","document","createElement","window","unload","removeEventListener","isNotFile","event","dataTransfer","items","kind","preventDefault","over","add","remove","PasteClipboard","textAreaElement","paste","clipboardData","indexOf","getAsFile","Uploader","callbacks","success","failure","uploaded","callback","dispatch","response","forEach","addBBcode","body","FormData","append","request","method","forum","serialize","raw","result","error","fileObj","pushObject","fileListState","image","archive","code","word","UserFileList","session","inModal","selectable","restrictFileType","downloadOnClick","state","screen","map","fileType","fileClassNames","fileIcon","includes","fileSelectable","isSelectable","selectedFiles","onFileClick","src","draggable","onFileSelect","open","FileManagerModal","multiSelect","dragDrop","onUpload","onremove","alertAttrs","Alert","hide","onSelect","transChoice","itemPosition","splice","fileId","getById","composer","editor","insertAtCursor","Modal","FileManagerButton","fileManagerButtonClicked","modal","show","UploadsUserPage","loadUser","route","param","content","UserPage","components","initializers","extend","TextEditor","composerButtonVisiblity","f_","preview","originalIsFullScreen","isFullScreen","dragAndDrop","parents","Post","unbind","stopPropagation","currentTarget","dataset","fofUploadDownloadUuid","post","csrfToken","alert","models","routes","LinkButton","href","username"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","module.exports = flarum.core.compat['app'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['components/UserPage'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['components/TextEditor'];","module.exports = flarum.core.compat['components/LinkButton'];","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['components/Post'];","module.exports = flarum.core.compat['utils/classList'];","module.exports = flarum.core.compat['components/Modal'];","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\nimport fileToBBcode from '../fileToBBcode';\n\nexport default class File extends mixin(Model, {\n    baseName: Model.attribute('baseName'),\n    path: Model.attribute('path'),\n    url: Model.attribute('url'),\n    type: Model.attribute('type'),\n    size: Model.attribute('size'),\n    humanSize: Model.attribute('humanSize'),\n    createdAt: Model.attribute('createdAt'),\n    uuid: Model.attribute('uuid'),\n    tag: Model.attribute('tag'),\n}) {\n    /**\n     * Use FoF Uploads endpoint\n     */\n    apiEndpoint() {\n        return '/fof/uploads' + (this.exists ? '/' + this.data.id : '');\n    }\n\n    /**\n     * Generate bbcode for this file\n     */\n    bbcode() {\n        return fileToBBcode(this);\n    }\n}\n","export default function fileToBBcode(file) {\n    switch (file.tag()) {\n        // File\n        case 'file':\n            return `[upl-file uuid=${file.uuid()} size=${file.humanSize()}]${file.baseName()}[/upl-file]`;\n\n        // Image template\n        case 'image':\n            return `[upl-image uuid=${file.uuid()} size=${file.humanSize()} url=${file.url()}]${file.baseName()}[/upl-image]`;\n\n        // Image preview\n        case 'image-preview':\n            return `[upl-image-preview url=${file.url()}]`;\n\n        // 'just-url' or unknown\n        default:\n            return file.url();\n    }\n}\n","export default class FileListState {\n    constructor() {\n        this.user = null;\n\n        this.files = [];\n\n        this.moreResults = false;\n\n        this.loading = false;\n    }\n\n    /**\n     * Set user and load list\n     *\n     * @param user A user to populate the media manager\n     */\n    setUser(user) {\n        // Keep previous state\n        if (user === this.user) return;\n\n        // Set user\n        this.user = user;\n\n        // Reset file list\n        this.files = [];\n\n        // Load user files\n        this.loadResults();\n    }\n\n    /**\n     * Load more user files\n     *\n     * @param offset The index to start the page at.\n     */\n    loadResults(offset = 0) {\n        if (!this.user) return;\n\n        this.loading = true;\n\n        return app.store\n            .find('fof/uploads', {\n                filter: {\n                    user: this.user.id(),\n                },\n                page: {\n                    offset,\n                },\n            })\n            .then(this.parseResults.bind(this));\n    }\n\n    /**\n     * Load the next page of discussion results.\n     */\n    loadMore() {\n        this.loading = true;\n\n        this.loadResults(this.files.length).then(this.parseResults.bind(this));\n    }\n\n    /**\n     * Parse results and append them to the file list.\n     */\n    parseResults(results) {\n        this.files.push(...results);\n\n        this.loading = false;\n        this.moreResults = !!results.payload.links && !!results.payload.links.next;\n\n        m.redraw();\n\n        return results;\n    }\n\n    /**\n     * Add files to the beginning of the list\n     */\n    addToList(files) {\n        if (Array.isArray(files)) {\n            this.files.unshift(...files);\n        } else {\n            this.files.unshift(files);\n        }\n    }\n\n    /**\n     * Are there any files in the list?\n     */\n    hasFiles() {\n        return this.files.length > 0;\n    }\n\n    /**\n     * Is the file list loading?\n     */\n    isLoading() {\n        return this.loading;\n    }\n\n    /**\n     * Does this user has more files?\n     */\n    hasMoreResults() {\n        return this.moreResults;\n    }\n\n    /**\n     * Does this user have any files?\n     */\n    empty() {\n        return !this.hasFiles() && !this.isLoading();\n    }\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport classList from 'flarum/utils/classList';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport Button from 'flarum/components/Button';\n\nexport default class UploadButton extends Component {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.attrs.uploader.on('uploaded', () => {\n            // reset the button for a new upload\n            this.$('form')[0].reset();\n\n            // redraw to reflect uploader.loading in the DOM\n            m.redraw();\n        });\n\n        this.isMediaUploadButton = vnode.attrs.isMediaUploadButton || false;\n    }\n\n    oncreate(vnode) {\n        super.oncreate(vnode);\n\n        // Add tooltip\n        if (!this.isMediaUploadButton) {\n            this.$().tooltip();\n        }\n    }\n\n    view() {\n        const buttonText = this.attrs.uploader.uploading\n            ? app.translator.trans('fof-upload.forum.states.loading')\n            : app.translator.trans('fof-upload.forum.buttons.upload');\n\n        return Button.component(\n            {\n                className: classList([\n                    'Button',\n                    'hasIcon',\n                    'fof-upload-button',\n                    !this.isMediaUploadButton && !this.attrs.uploader.uploading && 'Button--icon',\n                    !this.isMediaUploadButton && !this.attrs.uploader.uploading && 'Button--link',\n                    this.attrs.uploader.uploading && 'uploading',\n                ]),\n                icon: !this.attrs.uploader.uploading && 'fas fa-file-upload',\n                onclick: this.uploadButtonClicked.bind(this),\n                title: !this.isMediaUploadButton ? buttonText : null,\n                disabled: this.attrs.disabled,\n            },\n            [\n                this.attrs.uploader.uploading &&\n                    LoadingIndicator.component({\n                        size: 'tiny',\n                        className: 'LoadingIndicator--inline Button-icon',\n                    }),\n                this.isMediaUploadButton || this.attrs.uploader.uploading ? <span className=\"Button-label\">{buttonText}</span> : null,\n                <form>\n                    <input type=\"file\" multiple={true} onchange={this.process.bind(this)} />\n                </form>,\n            ]\n        );\n    }\n\n    /**\n     * Process the upload event.\n     *\n     * @param e\n     */\n    process(e) {\n        // get the file from the input field\n        const files = this.$('input').prop('files');\n\n        if (files.length === 0) {\n            // We've got no files to upload, so trying\n            // to begin an upload will show an error\n            // to the user.\n            return;\n        }\n\n        this.attrs.uploader.upload(files, !this.isMediaUploadButton);\n    }\n\n    /**\n     * Event handler for upload button being clicked\n     *\n     * @param {PointerEvent} e\n     */\n    uploadButtonClicked(e) {\n        // Trigger click on hidden input element\n        // (Opens file dialog)\n        this.$('input').click();\n    }\n}\n","export default class DragAndDrop {\n    constructor(upload, composerElement) {\n        this.upload = upload;\n        this.composerElement = composerElement;\n\n        // Keep references to the bound methods so we can remove the event listeners later\n        this.handlers = {};\n\n        if (!this.supportsFileDragging()) {\n            return;\n        }\n\n        this.composerElement.addEventListener('dragover', (this.handlers.in = this.in.bind(this)));\n\n        this.composerElement.addEventListener('dragleave', (this.handlers.out = this.out.bind(this)));\n        this.composerElement.addEventListener('dragend', this.handlers.out);\n\n        this.composerElement.addEventListener('drop', (this.handlers.dropping = this.dropping.bind(this)));\n    }\n\n    supportsFileDragging() {\n        // Based on https://css-tricks.com/drag-and-drop-file-uploading/\n        const div = document.createElement('div');\n\n        return ('draggable' in div || ('ondragstart' in div && 'ondrop' in div)) && 'FormData' in window && 'FileReader' in window;\n    }\n\n    unload() {\n        // If the handlers were not set (drag and drop not supported), we skip removing them\n        if (!this.handlers.in) {\n            return;\n        }\n\n        this.composerElement.removeEventListener('dragover', this.handlers.in);\n\n        this.composerElement.removeEventListener('dragleave', this.handlers.out);\n        this.composerElement.removeEventListener('dragend', this.handlers.out);\n\n        this.composerElement.removeEventListener('drop', this.handlers.dropping);\n    }\n\n    isNotFile(event) {\n        // Checking event.dataTransfer.files.length does not work on dragover event, it's always zero\n        // So we use the dataTransfer.items property to check whether any file is being dragged\n        if (event.dataTransfer.items) {\n            for (let i = 0; i < event.dataTransfer.items.length; i++) {\n                if (event.dataTransfer.items[i].kind !== 'file') {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    in(event) {\n        if (this.isNotFile(event)) {\n            return;\n        }\n\n        event.preventDefault();\n\n        if (!this.over) {\n            this.composerElement.classList.add('fof-upload-dragging');\n            this.over = true;\n        }\n    }\n\n    out(event) {\n        if (this.isNotFile(event)) {\n            return;\n        }\n\n        event.preventDefault();\n\n        if (this.over) {\n            this.composerElement.classList.remove('fof-upload-dragging');\n            this.over = false;\n        }\n    }\n\n    dropping(event) {\n        if (this.isNotFile(event)) {\n            return;\n        }\n\n        event.preventDefault();\n\n        this.upload(event.dataTransfer.files);\n\n        this.composerElement.classList.remove('fof-upload-dragging');\n    }\n}\n","export default class PasteClipboard {\n    constructor(upload, textAreaElement) {\n        this.upload = upload;\n\n        // We don't need to remove the events listeners, because they are bound to the textarea when it's created,\n        // and need to stay as long as the textarea exists in the DOM\n        textAreaElement.addEventListener('paste', this.paste.bind(this));\n    }\n\n    paste(e) {\n        if (e.clipboardData && e.clipboardData.items) {\n            const items = e.clipboardData.items;\n\n            const files = [];\n\n            for (let i = 0; i < items.length; i++) {\n                if (items[i].type.indexOf('image') !== -1) {\n                    files.push(items[i].getAsFile());\n                }\n            }\n\n            if (files.length > 0) {\n                e.preventDefault();\n\n                this.upload(files);\n            }\n        }\n    }\n}\n","export default class Uploader {\n    constructor() {\n        this.callbacks = {\n            success: [],\n            failure: [],\n            uploading: [],\n            uploaded: [],\n        };\n        this.uploading = false;\n    }\n\n    on(type, callback) {\n        this.callbacks[type].push(callback);\n    }\n\n    dispatch(type, response) {\n        this.callbacks[type].forEach((callback) => callback(response));\n    }\n\n    upload(files, addBBcode = true) {\n        this.uploading = true;\n        this.dispatch('uploading', files);\n\n        m.redraw(); // Forcing a redraw so that the button also updates if uploadFiles() is called from DragAndDrop or PasteClipboard\n\n        const body = new FormData();\n\n        for (let i = 0; i < files.length; i++) {\n            body.append('files[]', files[i]);\n        }\n\n        // send a POST request to the api\n        return app\n            .request({\n                method: 'POST',\n                url: app.forum.attribute('apiUrl') + '/fof/upload',\n                // prevent JSON.stringify'ing the form data in the XHR call\n                serialize: (raw) => raw,\n                body,\n            })\n            .then((result) => this.uploaded(result, addBBcode))\n            .catch((error) => {\n                this.uploading = false;\n                m.redraw();\n\n                throw error;\n            });\n    }\n\n    uploaded(result, addBBcode = false) {\n        this.uploading = false;\n\n        result.data.forEach((file) => {\n            const fileObj = app.store.pushObject(file);\n\n            // Add file to media manager\n            app.fileListState.addToList(fileObj);\n\n            // Dispatch\n            this.dispatch('success', {\n                file: fileObj,\n                addBBcode,\n            });\n        });\n\n        this.dispatch('uploaded');\n    }\n}\n","const image = ['image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'];\nconst archive = ['application/zip', 'application/x-7z-compressed', 'application/gzip', 'application/vnd.rar', 'application/x-rar-compressed'];\nconst code = ['text/html', 'text/css', 'text/javascript', 'application/json', 'application/ld+json', 'text/javascript', 'application/x-httpd-php'];\nconst word = ['application/x-abiword', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];\n\nexport default function mimeToIcon(fileType) {\n    // Display image (do not display for)\n    if (image.indexOf(fileType) >= 0) {\n        return 'image';\n    }\n    // Display image icon for other types\n    else if (fileType.includes('image/')) {\n        return 'far fa-file-image';\n    }\n    // Video icon\n    else if (fileType.includes('video/')) {\n        return 'far fa-file-video';\n    }\n    // Archive icon\n    else if (archive.indexOf(fileType) >= 0) {\n        return 'far fa-file-archive';\n    }\n    // PDF icon\n    else if (fileType === 'application/pdf') {\n        return 'far fa-file-pdf';\n    }\n    // Word\n    else if (word.indexOf(fileType) >= 0) {\n        return 'far fa-file-word';\n    }\n    // Audio icon\n    else if (fileType.includes('audio/')) {\n        return 'far fa-file-audio';\n    }\n    // Code files\n    else if (code.indexOf(fileType) >= 0) {\n        return 'far fa-file-code';\n    }\n\n    return 'far fa-file';\n}\n","import Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport mimeToIcon from '../../common/mimeToIcon';\n\nexport default class UserFileList extends Component {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        // Load file list\n        app.fileListState.setUser(vnode.attrs.user || app.session.user);\n\n        this.inModal = vnode.attrs.selectable;\n\n        this.restrictFileType = vnode.attrs.restrictFileType || null;\n\n        this.downloadOnClick = this.attrs.downloadOnClick || false;\n    }\n\n    view() {\n        const state = app.fileListState;\n\n        return (\n            <div className={'fof-upload-file-list'}>\n                {/* Loading */}\n                {state.isLoading() && state.files.length === 0 && (\n                    <div className={'fof-upload-loading'}>\n                        {app.translator.trans('fof-upload.forum.file_list.loading')}\n\n                        <LoadingIndicator />\n                    </div>\n                )}\n\n                {/* Empty personal file list */}\n                {this.inModal && state.empty() && (\n                    <p className={'fof-upload-empty'}>\n                        <i className={'fas fa-cloud-upload-alt fof-upload-empty-icon'}></i>\n\n                        {app.translator.trans(`fof-upload.forum.file_list.modal_empty_${app.screen() !== 'phone' ? 'desktop' : 'phone'}`)}\n                    </p>\n                )}\n\n                {/* Empty file list */}\n                {!this.inModal && state.empty() && <p className={'fof-upload-empty'}>{app.translator.trans('fof-upload.forum.file_list.empty')}</p>}\n\n                {/* File list */}\n                <ul>\n                    {state.files.map((file) => {\n                        let fileClassNames = 'fof-file';\n                        const fileIcon = mimeToIcon(file.type());\n                        const fileSelectable = this.restrictFileType ? this.isSelectable(file) : true;\n\n                        // File is image\n                        if (fileIcon === 'image') {\n                            fileClassNames += ' fof-file-type-image';\n                        }\n\n                        // File is selected\n                        if (this.attrs.selectedFiles && this.attrs.selectedFiles.indexOf(file.id()) >= 0) {\n                            fileClassNames += ' fof-file-selected';\n                        }\n\n                        return (\n                            <li>\n                                <button\n                                    className={fileClassNames}\n                                    onclick={() => this.onFileClick(file)}\n                                    title={file.baseName()}\n                                    disabled={!fileSelectable}\n                                >\n                                    <span className={'fof-file-icon'}>\n                                        <i className={fileIcon !== 'image' ? fileIcon : 'far fa-file-image'} />\n                                    </span>\n\n                                    {fileIcon === 'image' && <img src={file.url()} className={'fof-file-image-preview'} draggable={false} />}\n\n                                    <span className={'fof-file-name'}>{file.baseName()}</span>\n                                </button>\n                            </li>\n                        );\n                    })}\n                </ul>\n\n                {/* Load more files */}\n                {state.hasMoreResults() && (\n                    <div className={'fof-load-more-files'}>\n                        <Button\n                            className={'Button Button--primary'}\n                            disabled={state.isLoading()}\n                            loading={state.isLoading()}\n                            onclick={() => state.loadMore()}\n                        >\n                            {app.translator.trans('fof-upload.forum.buttons.load_more_files')}\n                        </Button>\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    /**\n     * Execute function on file click\n     *\n     * @param {*} file\n     */\n    onFileClick(file) {\n        // Custom functionality\n        if (this.attrs.onFileSelect) {\n            this.attrs.onFileSelect(file);\n            return;\n        }\n\n        // Download on click\n        if (this.attrs.downloadOnClick) {\n            window.open(file.url());\n            return;\n        }\n    }\n\n    /**\n     * Check if a file is selectable\n     *\n     * @param {File} file\n     */\n    isSelectable(file) {\n        const fileType = file.type();\n\n        // Custom defined file types\n        if (Array.isArray(this.restrictFileType)) {\n            return this.restrictFileType.indexOf(fileType) >= 0;\n        }\n\n        // Image\n        else if (this.restrictFileType === 'image') {\n            return fileType.includes('image/');\n        }\n\n        // Audio\n        else if (this.restrictFileType === 'audio') {\n            return fileType.includes('audio/');\n        }\n\n        // Video\n        else if (this.restrictFileType === 'video') {\n            return fileType.includes('video/');\n        }\n\n        return false;\n    }\n}\n","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport UploadButton from './UploadButton';\nimport UserFileList from './UserFileList';\nimport DragAndDrop from './DragAndDrop';\n\nexport default class FileManagerModal extends Modal {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        // Initialize upload managers\n        this.uploader = vnode.attrs.uploader;\n\n        // Current selected files\n        this.selectedFiles = [];\n\n        // Allow multiselect\n        this.multiSelect = vnode.attrs.multiSelect || true;\n\n        // Restrict file selection to specific types\n        this.restrictFileType = vnode.attrs.restrictFileType || null;\n\n        // Drag & drop\n        this.dragDrop = null;\n\n        // Initialize uploads\n        this.onUpload();\n    }\n\n    className() {\n        return 'Modal--large fof-file-manager-modal';\n    }\n\n    /**\n     * Initialize drag & drop\n     */\n    oncreate(vnode) {\n        super.oncreate(vnode);\n\n        this.dragDrop = new DragAndDrop((files) => this.uploader.upload(files, false), this.$().find('.Modal-content')[0]);\n    }\n\n    /**\n     * Remove events from modal content\n     */\n    onremove() {\n        if (this.dragDrop) {\n            this.dragDrop.unload();\n        }\n    }\n\n    view() {\n        return (\n            <div className={'Modal modal-dialog ' + this.className()}>\n                <div className=\"Modal-content\">\n                    <div className=\"fof-modal-buttons App-backControl\">\n                        {UploadButton.component({\n                            uploader: this.uploader,\n                            disabled: app.fileListState.isLoading(),\n                            isMediaUploadButton: true,\n                        })}\n                    </div>\n\n                    <div className=\"fof-drag-and-drop\">\n                        <div className=\"fof-drag-and-drop-release\">\n                            <i className=\"fas fa-cloud-upload-alt\"></i>\n\n                            {app.translator.trans('fof-upload.forum.file_list.release_to_upload')}\n                        </div>\n                    </div>\n\n                    <div className=\"Modal-header\">\n                        <h3 className=\"App-titleControl App-titleControl--text\">{app.translator.trans('fof-upload.forum.media_manager')}</h3>\n                    </div>\n\n                    {this.alertAttrs ? <div className=\"Modal-alert\">{Alert.component(this.alertAttrs)}</div> : ''}\n\n                    <div className=\"Modal-body\">\n                        {UserFileList.component({\n                            user: this.attrs.user,\n                            selectable: true,\n                            onFileSelect: this.onFileSelect.bind(this),\n                            selectedFiles: this.selectedFiles,\n                            restrictFileType: this.restrictFileType,\n                        })}\n                    </div>\n\n                    <div className=\"Modal-footer\">\n                        {Button.component(\n                            {\n                                onclick: this.hide.bind(this),\n                                className: 'Button',\n                            },\n                            app.translator.trans('fof-upload.forum.buttons.cancel')\n                        )}\n\n                        {Button.component(\n                            {\n                                onclick: this.onSelect.bind(this),\n                                disabled: this.selectedFiles.length === 0 || (!this.multiSelect && this.selectedFiles.length > 1),\n                                className: 'Button Button--primary',\n                            },\n                            app.translator.transChoice('fof-upload.forum.buttons.select_file', this.selectedFiles.length)\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * Add or remove file from selected files\n     *\n     * @param {File} file\n     */\n    onFileSelect(file) {\n        const itemPosition = this.selectedFiles.indexOf(file.id());\n\n        if (itemPosition >= 0) {\n            this.selectedFiles.splice(itemPosition, 1);\n        } else {\n            if (this.multiSelect) {\n                this.selectedFiles.push(file.id());\n            } else {\n                this.selectedFiles = [file.id()];\n            }\n        }\n    }\n\n    /**\n     * Add files to file list after upload\n     */\n    onUpload() {\n        this.uploader.on('success', ({ file }) => {\n            if (this.multiSelect) {\n                this.selectedFiles.push(file.id());\n            } else {\n                this.selectedFiles = [file.id()];\n            }\n        });\n    }\n\n    /**\n     * Add selected files to the composer\n     */\n    onSelect() {\n        this.hide();\n\n        // Custom callback\n        if (this.attrs.onSelect) {\n            this.attrs.onSelect(this.selectedFiles);\n\n            return;\n        }\n\n        // Add selected files to composer\n        this.selectedFiles.map((fileId) => {\n            const file = app.store.getById('files', fileId);\n\n            app.composer.editor.insertAtCursor(file.bbcode() + '\\n');\n        });\n    }\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport FileManagerModal from './FileManagerModal';\n\nexport default class FileManagerButton extends Component {\n    view() {\n        return Button.component({\n            className: 'Button fof-upload-button Button--icon',\n            onclick: this.fileManagerButtonClicked.bind(this),\n            icon: 'fas fa-photo-video',\n            title: app.translator.trans('fof-upload.forum.buttons.media'),\n        });\n    }\n\n    /**\n     * Show tooltip on hover\n     *\n     * @param {*} vnode\n     */\n    oncreate(vnode) {\n        super.oncreate(vnode);\n\n        // Add tooltip\n        this.$().tooltip();\n    }\n\n    /**\n     * Event handler for upload button being clicked\n     *\n     * @param {PointerEvent} e\n     */\n    fileManagerButtonClicked(e) {\n        e.preventDefault();\n\n        // Open dialog\n        app.modal.show(FileManagerModal, {\n            uploader: this.attrs.uploader,\n        });\n    }\n}\n","import UserPage from 'flarum/components/UserPage';\nimport UserFileList from './UserFileList';\n\nexport default class UploadsUserPage extends UserPage {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.user = null;\n\n        this.loadUser(m.route.param('username'));\n    }\n\n    content() {\n        if (this.user !== app.session.user && !app.forum.attribute('fof-upload.canViewUserUploads')) return null;\n\n        return (\n            this.user &&\n            UserFileList.component({\n                user: this.user,\n                selectable: false,\n                downloadOnClick: true,\n            })\n        );\n    }\n\n    show(user) {\n        super.show(user);\n        this.user = user;\n    }\n}\n","import Uploader from '../handler/Uploader';\nimport DragAndDrop from './DragAndDrop';\nimport FileManagerButton from './FileManagerButton';\nimport FileManagerModal from './FileManagerModal';\nimport UserFileList from './UserFileList';\n\nexport const components = {\n    DragAndDrop,\n    FileManagerButton,\n    FileManagerModal,\n    UserFileList,\n    Uploader,\n};\n","import { extend } from 'flarum/extend';\nimport app from 'flarum/app';\nimport UserPage from 'flarum/components/UserPage';\nimport LinkButton from 'flarum/components/LinkButton';\n\nimport File from '../common/models/File';\nimport FileListState from './states/FileListState';\nimport downloadButtonInteraction from './downloadButtonInteraction';\nimport addUploadButton from './addUploadButton';\nimport UploadsUserPage from './components/UploadsUserPage';\n\nexport * from './components';\n\napp.initializers.add('fof-upload', () => {\n    addUploadButton();\n    downloadButtonInteraction();\n\n    // File model\n    app.store.models.files = File;\n\n    // File list state\n    app.fileListState = new FileListState();\n\n    // Add user uploads to the user profile\n    app.routes['user.uploads'] = {\n        path: '/u/:username/uploads',\n        component: UploadsUserPage,\n    };\n\n    // Add uploads to user page menu items\n    extend(UserPage.prototype, 'navItems', function (items) {\n        if (this.user !== app.session.user && !app.forum.attribute('fof-upload.canViewUserUploads')) return;\n\n        items.add(\n            'uploads',\n            LinkButton.component(\n                {\n                    href: app.route('user.uploads', {\n                        username: this.user.username(),\n                    }),\n                    name: 'uploads',\n                    icon: 'fas fa-file-upload',\n                },\n                this.user === app.session.user\n                    ? app.translator.trans('fof-upload.forum.buttons.media')\n                    : app.translator.trans('fof-upload.forum.buttons.user_uploads')\n            ),\n            80\n        );\n    });\n});\n","import app from 'flarum/app';\nimport { extend } from 'flarum/extend';\nimport TextEditor from 'flarum/components/TextEditor';\nimport UploadButton from './components/UploadButton';\nimport DragAndDrop from './components/DragAndDrop';\nimport PasteClipboard from './components/PasteClipboard';\nimport Uploader from './handler/Uploader';\nimport FileManagerButton from './components/FileManagerButton';\n\nexport default function () {\n    extend(TextEditor.prototype, 'oninit', function () {\n        this.uploader = new Uploader();\n    });\n    extend(TextEditor.prototype, 'controlItems', function (items) {\n        if (!app.forum.attribute('fof-upload.canUpload')) return;\n\n        const composerButtonVisiblity = app.forum.attribute('fof-upload.composerButtonVisiblity');\n\n        // Add media button\n        if (composerButtonVisiblity === 'both' || composerButtonVisiblity === 'media-btn') {\n            items.add(\n                'fof-upload-media',\n                FileManagerButton.component({\n                    uploader: this.uploader,\n                })\n            );\n        }\n\n        // Add upload button\n        if (composerButtonVisiblity === 'both' || composerButtonVisiblity === 'upload-btn') {\n            items.add(\n                'fof-upload',\n                UploadButton.component({\n                    uploader: this.uploader,\n                })\n            );\n        }\n    });\n\n    extend(TextEditor.prototype, 'oncreate', function (f_, vnode) {\n        if (!app.forum.attribute('fof-upload.canUpload')) return;\n\n        this.uploader.on('success', ({ file, addBBcode }) => {\n            if (!addBBcode) return;\n\n            this.attrs.composer.editor.insertAtCursor(file.bbcode() + '\\n');\n\n            // We wrap this in a typeof check to prevent it running when a user\n            // is creating a new discussion. There's nothing to preview in a new\n            // discussion, so the `preview` function isn't defined.\n            if (typeof this.attrs.preview === 'function') {\n                // Scroll the preview into view\n                // preview() causes the composer to close on mobile, but we don't want that. We want only the scroll\n                // We work around that by temporarily patching the isFullScreen method\n                const originalIsFullScreen = app.composer.isFullScreen;\n\n                app.composer.isFullScreen = () => false;\n\n                this.attrs.preview();\n\n                app.composer.isFullScreen = originalIsFullScreen;\n            }\n        });\n\n        const dragAndDrop = new DragAndDrop((files) => this.uploader.upload(files), this.$().parents('.Composer')[0]);\n\n        const unloadHandler = () => {\n            dragAndDrop.unload();\n        };\n\n        this.$('textarea').bind('onunload', unloadHandler);\n\n        new PasteClipboard((files) => this.uploader.upload(files), this.$('textarea')[0]);\n    });\n}\n","import app from 'flarum/app';\nimport { extend } from 'flarum/extend';\nimport Post from 'flarum/components/Post';\n\n/* global $ */\n\nexport default function () {\n    extend(Post.prototype, 'oncreate', function () {\n        this.$('[data-fof-upload-download-uuid]')\n            .unbind('click')\n            .on('click', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n\n                if (!app.forum.attribute('fof-upload.canDownload')) {\n                    alert(app.translator.trans('fof-upload.forum.states.unauthorized'));\n                    return;\n                }\n\n                let url = app.forum.attribute('apiUrl') + '/fof/download';\n\n                url += '/' + e.currentTarget.dataset.fofUploadDownloadUuid;\n                url += '/' + this.attrs.post.id();\n                url += '/' + app.session.csrfToken;\n\n                window.open(url);\n            });\n    });\n}\n"],"sourceRoot":""}