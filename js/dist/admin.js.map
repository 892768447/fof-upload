{"version":3,"sources":["webpack://@fof/upload/webpack/bootstrap","webpack://@fof/upload/./admin.js","webpack://@fof/upload/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/upload/./src/admin/addUploadPane.js","webpack://@fof/upload/./src/admin/components/UploadPage.js","webpack://@fof/upload/./src/admin/index.js","webpack://@fof/upload/external \"flarum.core.compat['Component']\"","webpack://@fof/upload/external \"flarum.core.compat['app']\"","webpack://@fof/upload/external \"flarum.core.compat['components/AdminLinkButton']\"","webpack://@fof/upload/external \"flarum.core.compat['components/AdminNav']\"","webpack://@fof/upload/external \"flarum.core.compat['components/Alert']\"","webpack://@fof/upload/external \"flarum.core.compat['components/Button']\"","webpack://@fof/upload/external \"flarum.core.compat['components/PermissionGrid']\"","webpack://@fof/upload/external \"flarum.core.compat['components/Select']\"","webpack://@fof/upload/external \"flarum.core.compat['components/Switch']\"","webpack://@fof/upload/external \"flarum.core.compat['components/UploadImageButton']\"","webpack://@fof/upload/external \"flarum.core.compat['extend']\"","webpack://@fof/upload/external \"flarum.core.compat['utils/Stream']\"","webpack://@fof/upload/external \"flarum.core.compat['utils/saveSettings']\"","webpack://@fof/upload/external \"flarum.core.compat['utils/withAttr']\""],"names":["app","routes","path","component","UploadPage","extensionSettings","m","route","get","extend","AdminNav","prototype","items","add","AdminLinkButton","href","icon","description","translator","trans","oninit","vnode","loading","fields","checkboxes","objects","watermarkPositions","settings","data","settingsPrefix","uploadMethodOptions","addPrefix","templateOptions","values","forEach","key","Stream","JSON","parse","mimeTypes","adapter","template","newMimeType","regex","view","onsubmit","bind","value","maxFileSize","oninput","withAttr","Object","keys","map","mime","config","updateMimeTypeKey","Select","options","onchange","updateMimeTypeAdapter","getTemplateOptionsForInput","updateMimeTypeTemplate","Button","type","className","onclick","deleteMimeType","addMimeType","templateOptionsDescriptions","Switch","state","mustResize","resizeMaxWidth","disabled","whitelistedClientExtensions","addsWatermarks","watermarkPosition","UploadImageButton","name","disableHotlinkProtection","disableDownloadLogging","cdnUrl","imgurClientId","qiniuKey","qiniuSecret","qiniuBucket","awsS3Key","awsS3Secret","awsS3Bucket","awsS3Region","changed","option","hasOwnProperty","children","push","fieldsCheck","some","checkboxesCheck","objectsCheck","stringify","e","preventDefault","alerts","dismiss","successAlert","saveSettings","then","show","Alert","redraw","Component","initializers","addUploadPane","PermissionGrid","label","permission","allowGuest"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./admin.js\");\n","export * from './src/admin';\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import app from 'flarum/app';\nimport {extend} from 'flarum/extend';\nimport AdminNav from 'flarum/components/AdminNav';\nimport AdminLinkButton from 'flarum/components/AdminLinkButton';\nimport UploadPage from './components/UploadPage';\n\nexport default function () {\n    app.routes['fof-upload'] = {path: '/fof/upload', component: UploadPage};\n    app.extensionSettings['fof-upload'] = () => m.route.get(app.route('fof-upload'));\n\n    extend(AdminNav.prototype, 'items', items => {\n        items.add('fof-upload', AdminLinkButton.component({\n            href: app.route('fof-upload'),\n            icon: 'far fa-file',\n            description: app.translator.trans('fof-upload.admin.pane.description'),\n        }, app.translator.trans('fof-upload.admin.pane.title')));\n    });\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport saveSettings from 'flarum/utils/saveSettings';\nimport Alert from 'flarum/components/Alert';\nimport Select from 'flarum/components/Select';\nimport Switch from 'flarum/components/Switch';\nimport UploadImageButton from 'flarum/components/UploadImageButton';\nimport withAttr from 'flarum/utils/withAttr';\nimport Stream from 'flarum/utils/Stream';\n\n/* global m */\n\nexport default class UploadPage extends Component {\n\n    oninit(vnode) {\n        super.oninit(vnode);\n        // whether we are saving the settings or not right now\n        this.loading = false;\n\n        // the fields we need to watch and to save\n        this.fields = [\n            // image\n            'resizeMaxWidth',\n            'cdnUrl',\n            'maxFileSize',\n            'whitelistedClientExtensions',\n            // watermark\n            'watermark',\n            'watermarkPosition',\n            // Imgur\n            'imgurClientId',\n            // AWS\n            'awsS3Key',\n            'awsS3Secret',\n            'awsS3Bucket',\n            'awsS3Region',\n            // QIniu\n            'qiniuKey',\n            'qiniuSecret',\n            'qiniuBucket',\n        ];\n\n        // the checkboxes we need to watch and to save.\n        this.checkboxes = [\n            'mustResize',\n            'addsWatermarks',\n\n            'disableHotlinkProtection',\n            'disableDownloadLogging',\n        ];\n\n        // fields that are objects\n        this.objects = [\n            'mimeTypes',\n        ];\n\n        // watermark positions\n        this.watermarkPositions = {\n            'top-left': 'top-left',\n            'top-right': 'top-right',\n            'bottom-left': 'bottom-left',\n            'bottom-right': 'bottom-right',\n            'center': 'center',\n            'left': 'left',\n            'top': 'top',\n            'right': 'right',\n            'bottom': 'bottom',\n        };\n\n        // get the saved settings from the database\n        const settings = app.data.settings;\n\n        // our package prefix (to be added to every field and checkbox in the setting table)\n        this.settingsPrefix = 'fof-upload';\n\n        // Options for the Upload methods dropdown menu.\n        this.uploadMethodOptions = settings[this.addPrefix('availableUploadMethods')] || {};\n        // Options for the Template dropdown menu.\n        this.templateOptions = settings[this.addPrefix('availableTemplates')] || {};\n\n        // Contains current values.\n        this.values = {};\n        // bind the values of the fields and checkboxes to the getter/setter functions\n        this.fields.forEach(key =>\n            this.values[key] = Stream(settings[this.addPrefix(key)])\n        );\n        this.checkboxes.forEach(key =>\n            this.values[key] = Stream(settings[this.addPrefix(key)] === '1')\n        );\n        this.objects.forEach(key =>\n            this.values[key] = settings[this.addPrefix(key)]\n                ? Stream(JSON.parse(settings[this.addPrefix(key)]))\n                : Stream()\n        );\n\n        // Set a sane default in case no mimeTypes have been configured yet.\n        this.values.mimeTypes() || (this.values.mimeTypes = Stream({\n            '^image\\\\/.*': {\n                adapter: 'local',\n                template: 'image-preview',\n            },\n        }));\n\n        this.newMimeType = {\n            regex: Stream(''),\n            adapter: Stream('local'),\n            template: Stream('file'),\n        };\n    }\n\n    /**\n     * Show the actual ImageUploadPage.\n     *\n     * @returns {*}\n     */\n    view() {\n        return [\n            m('.UploadPage', [\n                m('.container', [\n                    m('form', {\n                        onsubmit: this.onsubmit.bind(this),\n                    }, [\n                        m('fieldset', [\n                            m('legend', app.translator.trans('fof-upload.admin.labels.preferences.title')),\n                            m('label', app.translator.trans('fof-upload.admin.labels.preferences.max_file_size')),\n                            m('input.FormControl', {\n                                value: this.values.maxFileSize() || 2048,\n                                oninput: withAttr('value', this.values.maxFileSize),\n                            }),\n                            m('label', app.translator.trans('fof-upload.admin.labels.preferences.mime_types')),\n                            m('.MimeTypes--Container',\n                                Object.keys(this.values.mimeTypes())\n                                    .map(mime => {\n                                        let config = this.values.mimeTypes()[mime];\n                                        // Compatibility for older versions.\n                                        if (typeof config !== 'object') {\n                                            config = {\n                                                adapter: config,\n                                                template: 'file',\n                                            };\n                                        }\n\n                                        return m('div', [\n                                            m('input.FormControl.MimeTypes', {\n                                                value: mime,\n                                                oninput: withAttr('value', this.updateMimeTypeKey.bind(this, mime)),\n                                            }),\n                                            Select.component({\n                                                options: this.uploadMethodOptions,\n                                                onchange: this.updateMimeTypeAdapter.bind(this, mime, config),\n                                                value: config.adapter || 'local',\n                                            }),\n                                            Select.component({\n                                                options: this.getTemplateOptionsForInput(),\n                                                onchange: this.updateMimeTypeTemplate.bind(this, mime, config),\n                                                value: config.template || 'local',\n                                            }),\n                                            Button.component({\n                                                type: 'button',\n                                                className: 'Button Button--warning',\n                                                onclick: this.deleteMimeType.bind(this, mime),\n                                            }, 'x'),\n                                        ]);\n                                    }),\n                                m('br'),\n                                m('div', [\n                                    m('input.FormControl.MimeTypes.add-MimeType-key', {\n                                        value: this.newMimeType.regex(),\n                                        oninput: withAttr('value', this.newMimeType.regex),\n                                    }),\n                                    Select.component({\n                                        options: this.uploadMethodOptions,\n                                        className: 'add-MimeType-value',\n                                        oninput: withAttr('value', this.newMimeType.adapter),\n                                        value: this.newMimeType.adapter(),\n                                    }),\n                                    Select.component({\n                                        options: this.getTemplateOptionsForInput(),\n                                        className: 'add-MimeType-value',\n                                        oninput: withAttr('value', this.newMimeType.template),\n                                        value: this.newMimeType.template(),\n                                    }),\n                                    Button.component({\n                                        type: 'button',\n                                        className: 'Button Button--warning',\n                                        onclick: this.addMimeType.bind(this),\n                                    }, '+'),\n                                ]),\n                            ),\n                            m('.helpText', app.translator.trans('fof-upload.admin.help_texts.mime_types')),\n                            m('.helpText', app.translator.trans('fof-upload.admin.help_texts.download_templates')),\n                            this.templateOptionsDescriptions(),\n                        ]),\n                        m('fieldset', [\n                            m('legend', app.translator.trans('fof-upload.admin.labels.resize.title')),\n                            m('.helpText', app.translator.trans('fof-upload.admin.help_texts.resize')),\n                            Switch.component({\n                                state: this.values.mustResize() || false,\n                                onchange: this.values.mustResize,\n                            }, app.translator.trans('fof-upload.admin.labels.resize.toggle')),\n                            m('label', app.translator.trans('fof-upload.admin.labels.resize.max_width')),\n                            m('input', {\n                                className: 'FormControl',\n                                value: this.values.resizeMaxWidth() || 100,\n                                oninput: withAttr('value', this.values.resizeMaxWidth),\n                                disabled: !this.values.mustResize(),\n                            }),\n                        ]),\n                        m('fieldset', [\n                            m('legend', app.translator.trans('fof-upload.admin.labels.client_extension.title')),\n                            m('.helpText', app.translator.trans('fof-upload.admin.help_texts.client_extension')),\n                            m('input', {\n                                className: 'FormControl',\n                                value: this.values.whitelistedClientExtensions() || '',\n                                oninput: withAttr('value', this.values.whitelistedClientExtensions),\n                            }),\n                        ]),\n                        m('fieldset', [\n                            m('legend', app.translator.trans('fof-upload.admin.labels.watermark.title')),\n                            m('.helpText', app.translator.trans('fof-upload.admin.help_texts.watermark')),\n                            Switch.component({\n                                state: this.values.addsWatermarks() || false,\n                                onchange: this.values.addsWatermarks,\n                            }, app.translator.trans('fof-upload.admin.labels.watermark.toggle')),\n                            m('label', app.translator.trans('fof-upload.admin.labels.watermark.position')),\n                            m('div', [\n                                Select.component({\n                                    options: this.watermarkPositions,\n                                    onchange: this.values.watermarkPosition,\n                                    value: this.values.watermarkPosition() || 'bottom-right',\n                                }),\n                            ]),\n                            m('label', {}, app.translator.trans('fof-upload.admin.labels.watermark.file')),\n                            UploadImageButton.component({\n                                name: 'fof/watermark',\n                            }),\n                        ]),\n                        m('fieldset', [\n                            m('legend', app.translator.trans('fof-upload.admin.labels.disable-hotlink-protection.title')),\n                            m('.helpText', app.translator.trans('fof-upload.admin.help_texts.disable-hotlink-protection')),\n                            Switch.component({\n                                state: this.values.disableHotlinkProtection() || false,\n                                onchange: this.values.disableHotlinkProtection,\n                            }, app.translator.trans('fof-upload.admin.labels.disable-hotlink-protection.toggle')),\n                            m('legend', app.translator.trans('fof-upload.admin.labels.disable-download-logging.title')),\n                            m('.helpText', app.translator.trans('fof-upload.admin.help_texts.disable-download-logging')),\n                            Switch.component({\n                                state: this.values.disableDownloadLogging() || false,\n                                onchange: this.values.disableDownloadLogging,\n                            }, app.translator.trans('fof-upload.admin.labels.disable-download-logging.toggle')),\n                        ]),\n                        m('fieldset', [\n                            m('legend', app.translator.trans('fof-upload.admin.labels.local.title')),\n                            m('label', app.translator.trans('fof-upload.admin.labels.local.cdn_url')),\n                            m('input.FormControl', {\n                                value: this.values.cdnUrl() || '',\n                                oninput: withAttr('value', this.values.cdnUrl),\n                            }),\n                        ]),\n                        m('fieldset', [\n                            m('legend', app.translator.trans('fof-upload.admin.labels.imgur.title')),\n                            m('label', app.translator.trans('fof-upload.admin.labels.imgur.client_id')),\n                            m('input.FormControl', {\n                                value: this.values.imgurClientId() || '',\n                                oninput: withAttr('value', this.values.imgurClientId),\n                            }),\n                        ]),\n                        m('fieldset', [\n                            m('legend', app.translator.trans('fof-upload.admin.labels.qiniu.title')),\n                            m('label', app.translator.trans('fof-upload.admin.labels.qiniu.key')),\n                            m('input.FormControl', {\n                                value: this.values.qiniuKey() || '',\n                                oninput: withAttr('value', this.values.qiniuKey),\n                            }),\n                            m('label', {}, app.translator.trans('fof-upload.admin.labels.qiniu.secret')),\n                            m('input.FormControl', {\n                                value: this.values.qiniuSecret() || '',\n                                oninput: withAttr('value', this.values.qiniuSecret),\n                            }),\n                            m('label', {}, app.translator.trans('fof-upload.admin.labels.qiniu.bucket')),\n                            m('input.FormControl', {\n                                value: this.values.qiniuBucket() || '',\n                                oninput: withAttr('value', this.values.qiniuBucket),\n                            }),\n                        ]),\n                        m('fieldset', [\n                            m('legend', app.translator.trans('fof-upload.admin.labels.aws-s3.title')),\n                            m('label', app.translator.trans('fof-upload.admin.labels.aws-s3.key')),\n                            m('input.FormControl', {\n                                value: this.values.awsS3Key() || '',\n                                oninput: withAttr('value', this.values.awsS3Key),\n                            }),\n                            m('label', app.translator.trans('fof-upload.admin.labels.aws-s3.secret')),\n                            m('input.FormControl', {\n                                value: this.values.awsS3Secret() || '',\n                                oninput: withAttr('value', this.values.awsS3Secret),\n                            }),\n                            m('label', app.translator.trans('fof-upload.admin.labels.aws-s3.bucket')),\n                            m('input.FormControl', {\n                                value: this.values.awsS3Bucket() || '',\n                                oninput: withAttr('value', this.values.awsS3Bucket),\n                            }),\n                            m('label', app.translator.trans('fof-upload.admin.labels.aws-s3.region')),\n                            m('input.FormControl', {\n                                value: this.values.awsS3Region() || '',\n                                oninput: withAttr('value', this.values.awsS3Region),\n                            }),\n                        ]),\n                        Button.component({\n                            type: 'submit',\n                            className: 'Button Button--primary',\n                            loading: this.loading,\n                            disabled: !this.changed(),\n                        }, app.translator.trans('fof-upload.admin.buttons.save')),\n                    ]),\n                ]),\n            ]),\n        ];\n    }\n\n    getTemplateOptionsForInput() {\n        const options = {};\n\n        for (let option in this.templateOptions) {\n            if (!this.templateOptions.hasOwnProperty(option)) {\n                continue;\n            }\n\n            options[option] = this.templateOptions[option].name;\n        }\n\n        return options;\n    }\n\n    updateMimeTypeKey(mime, value) {\n        this.values.mimeTypes()[value] = this.values.mimeTypes()[mime];\n\n        this.deleteMimeType(mime);\n    }\n\n    updateMimeTypeAdapter(mime, config, value) {\n        config.adapter = value;\n        this.values.mimeTypes()[mime] = config;\n    }\n\n    updateMimeTypeTemplate(mime, config, value) {\n        config.template = value;\n        this.values.mimeTypes()[mime] = config;\n    }\n\n    deleteMimeType(mime) {\n        delete this.values.mimeTypes()[mime];\n    }\n\n    templateOptionsDescriptions() {\n        const children = [];\n\n        for (let template in this.templateOptions) {\n            if (!this.templateOptions.hasOwnProperty(template)) {\n                continue;\n            }\n\n            children.push(m('li', this.templateOptions[template].name + ': ' + this.templateOptions[template].description));\n        }\n\n        return m('ul', children);\n    }\n\n    addMimeType() {\n        this.values.mimeTypes()[this.newMimeType.regex()] = {\n            adapter: this.newMimeType.adapter(),\n            template: this.newMimeType.template()\n        };\n\n        this.newMimeType.regex('');\n        this.newMimeType.adapter('local');\n        this.newMimeType.template('file');\n    }\n\n    /**\n     * Checks if the values of the fields and checkboxes are different from\n     * the ones stored in the database\n     *\n     * @returns boolean\n     */\n    changed() {\n        const fieldsCheck = this.fields.some(\n            key => this.values[key]() !== app.data.settings[this.addPrefix(key)]\n        );\n        const checkboxesCheck = this.checkboxes.some(\n            key => this.values[key]() !== (app.data.settings[this.addPrefix(key)] === '1')\n        );\n        const objectsCheck = this.objects.some(\n            key => JSON.stringify(this.values[key]()) !== (app.data.settings[this.addPrefix(key)])\n        );\n\n        return fieldsCheck || checkboxesCheck || objectsCheck;\n    }\n\n    /**\n     * Saves the settings to the database and redraw the page\n     *\n     * @param e\n     */\n    onsubmit(e) {\n        // prevent the usual form submit behaviour\n        e.preventDefault();\n\n        // if the page is already saving, do nothing\n        if (this.loading) return;\n\n        // prevents multiple savings\n        this.loading = true;\n\n        // remove previous success popup\n        app.alerts.dismiss(this.successAlert);\n\n        const settings = {};\n\n        // gets all the values from the form\n        this.fields.forEach(key => settings[this.addPrefix(key)] = this.values[key]());\n        this.checkboxes.forEach(key => settings[this.addPrefix(key)] = this.values[key]());\n        this.objects.forEach(key => settings[this.addPrefix(key)] = JSON.stringify(this.values[key]()));\n\n        // actually saves everything in the database\n        saveSettings(settings)\n            .then(() => {\n                // on success, show popup\n                this.successAlert = app.alerts.show(\n                    Alert,\n                    {type: 'success'},\n                    app.translator.trans('core.admin.basics.saved_message')\n                );\n            })\n            .catch(() => {\n            })\n            .then(() => {\n                // return to the initial state and redraw the page\n                this.loading = false;\n                m.redraw();\n            });\n    }\n\n    /**\n     * Adds the prefix `this.settingsPrefix` at the beginning of `key`\n     *\n     * @returns string\n     */\n    addPrefix(key) {\n        return this.settingsPrefix + '.' + key;\n    }\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport PermissionGrid from 'flarum/components/PermissionGrid';\nimport addUploadPane from './addUploadPane';\n\napp.initializers.add('fof-upload', app => {\n    // add the admin pane\n    addUploadPane();\n\n    // add the permission option to the relative pane\n    extend(PermissionGrid.prototype, 'startItems', items => {\n        items.add('fof-upload', {\n            icon: 'far fa-file',\n            label: app.translator.trans('fof-upload.admin.permissions.upload_label'),\n            permission: 'fof-upload.upload',\n        });\n    });\n\n    // add the permission option to the relative pane\n    extend(PermissionGrid.prototype, 'viewItems', items => {\n        items.add('fof-download', {\n            icon: 'fas fa-download',\n            label: app.translator.trans('fof-upload.admin.permissions.download_label'),\n            permission: 'fof-upload.download',\n            allowGuest: true,\n        });\n    });\n});\n","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/AdminLinkButton'];","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/Alert'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/PermissionGrid'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['components/UploadImageButton'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['utils/Stream'];","module.exports = flarum.core.compat['utils/saveSettings'];","module.exports = flarum.core.compat['utils/withAttr'];"],"sourceRoot":""}